#include <stdio.h>

int dayNumber(int day, int month, int year);
const char* getMonthName(int monthNumber);
int numberOfDays(int monthNumber, int year);
void printCalender(int year);

int main() {
    int year;
    printf("Enter year: ");
    scanf("%d", &year);
    printCalender(year);
    return 0;
}

// Function to calculate the day number using Zeller's Congruence
int dayNumber(int day, int month, int year) {
    static int t[] = {0, 3, 2, 5, 0, 3, 5, 1, 4, 6, 2, 4};
    year -= month < 3;
    return (year + year / 4 - year / 100 + year / 400 + t[month - 1] + day) % 7;
}

// Function to get the name of the month
const char* getMonthName(int monthNumber) {
    const char* month[] = {"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"};
  
    if (monthNumber >= 1 && monthNumber <= 12) {
        return month[monthNumber - 1];
    }
    return NULL;
}

// Function to get the number of days in a month for a given year
int numberOfDays(int monthNumber, int year) {
    // February
    if (monthNumber == 2) {
        // If the year is leap then Feb has 29 days
        if (year % 400 == 0 || (year % 4 == 0 && year % 100 != 0))
            return 29;
        else
            return 28;
    }
    // 31 days months (January to July and December)
    else if ((monthNumber >= 1 && monthNumber <= 7 && monthNumber % 2 != 0) || (monthNumber == 12)) {
        return 31;
    }
    // 30 days months
    else if (monthNumber == 4 || monthNumber == 6 || monthNumber == 9 || monthNumber == 11) {
        return 30;
    }
    else {
        return -1;
    }
}

// Function to print the calendar for a given year
void printCalender(int year) {
    printf("     Calendar - %d\n\n", year);

    // Loop through each month
    for (int i = 1; i <= 12; i++) {
        int days = numberOfDays(i, year);
        printf("\n          %s          \n", getMonthName(i));

        // Print the header with days of the week
        printf(" Sun Mon Tue Wed Thu Fri Sat\n");

        // Get the starting day for the current month
        int current = dayNumber(1, i, year);

        // Adjust for the starting day
        for (int k = 0; k < current; k++) {
            printf("    ");
        }

        // Print the dates
        for (int j = 1; j <= days; j++) {
            printf("%4d", j);
            current++;
            if (current % 7 == 0) {
                printf("\n");
            }
        }
        printf("\n");
    }
}
